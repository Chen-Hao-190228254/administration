<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.skm.exa.persistence.dao.AuthorityDao">
    <sql id="columns">
        `id`,
        `code`,
        `name`,
        `status`,
        `entry_id`,
        `entry_name`,
        `entry_dt`,
        `update_id`,
        `update_name`,
        `update_dt`
    </sql>

    <resultMap id="RM" type="com.skm.exa.domain.bean.AuthorityBean">
        <id property="id" column="id"/>
        <result property="code" column="code"/>
        <result property="name" column="name"/>
        <result property="status" column="status"/>
        <result property="entryId" column="entry_id"/>
        <result property="entryName" column="entry_name"/>
        <result property="entryDt" column="entry_dt"/>
        <result property="updateId" column="update_id"/>
        <result property="updateName" column="update_name"/>
        <result property="updateDt" column="update_dt"/>
    </resultMap>



    <sql id="searchCondition">
        <where>
            <if test="id != null">AND `id` = #{id, jdbcType=BIGINT}</if>
            <if test="@com.skm.exa.mybatis.Ognl@isNotEmpty(code)">AND `code` = #{code, jdbcType=VARCHAR}</if>
            <if test="@com.skm.exa.mybatis.Ognl@isNotEmpty(name)">AND `name` = #{name, jdbcType=VARCHAR}</if>
            <if test="@com.skm.exa.mybatis.Ognl@isNotEmpty(codeLike)">AND `code` LIKE "%"#{codeLike, jdbcType=VARCHAR}"%"</if>
            <if test="@com.skm.exa.mybatis.Ognl@isNotEmpty(nameLike)">AND `name` LIKE "%"#{nameLike, jdbcType=VARCHAR}"%"</if>
        </where>
    </sql>


    <select id="select" resultMap="RM">
        SELECT
        <include refid="columns"/>
        FROM `administration_authority`
        <include refid="searchCondition"/>
    </select>




    <select id="get" resultMap="RM">
        SELECT
        <include refid="columns"/>
        FROM `administration_authority`
        WHERE `id`=#{id}
    </select>





    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `administration_authority`(
            `code`,
            `name`,
            `status`,
            `entry_id`,
            `entry_name`,
            `entry_dt`,
            `update_id`,
            `update_name`,
            `update_dt`
        )VALUES(
            #{code},
            #{name},
            #{status},
            #{entryId},
            #{entryName},
            #{entryDt},
            #{updateId},
            #{updateName},
            #{updateDt}
        )
    </insert>



    <update id="update" useGeneratedKeys="true" keyProperty="id">
        UPDATE `administration_authority`
        SET
            `code` = #{code},
            `name` = #{name},
            `status` = #{status},
            `update_id` = #{updateId},
            `update_name` = #{updateName},
            `update_dt` = #{updateDt}
            WHERE
            `id` = #{id}
    </update>




    <delete id="delete">
        DELETE FROM `administration_authority` WHERE `id` = #{id}
    </delete>


</mapper>